package vue;
import java.awt.GridLayout;
import java.awt.Color;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import org.json.JSONObject;

import socket.EventCallback;
import socket.SocketMessage;

public class Fenetre extends JFrame{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Color[] cols;
	private int numColor;
	JButton button;
	JPanel pane;
	
	JPanel streamArea;
	JPanel buttonCommands;
	JButton altUp;
	JButton altDown;
	JButton rotateClock;
	JButton rotateUnclock;
	JButton orientFront;
	JButton orientBack;
	JButton orientLeft;
	JButton orientRight;
	public Fenetre(){
		cols=new Color[]{Color.RED,Color.BLACK,Color.BLUE,Color.GREEN,Color.GRAY,Color.CYAN};
		numColor=0;
		this.setSize(400, 600);
		this.setLayout(new GridLayout(2,1));
	    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	    initComponents();
	    SocketMessage.start(new EventCallback(this));
		this.setVisible(true);
		
	}
	

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

	    button= new JButton();
	    pane =new JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat");

	    pane.setBackground(cols[numColor]);
	    this.add(pane);
	    this.add(button);


        button.setText("Send");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });
        
    }
    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {
    	JSONObject jobj=new JSONObject();	
    	SocketMessage.send("hello",jobj);
    }
	
	public void repaint(){
		numColor=(numColor+1) % cols.length;
		pane.setBackground(cols[numColor]);		
	}


}

